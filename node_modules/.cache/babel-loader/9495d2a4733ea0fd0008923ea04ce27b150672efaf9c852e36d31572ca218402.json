{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\GitHub\\\\react_lesson\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport Header from \"../Header\";\nimport MainContent from \"../MainContent\";\nimport Footer from \"../Footer\";\nimport Form from \"./Form\";\n\n// function App() {\n//     return (\n//         <div>\n//           <Header />\n//           <MainContent />\n//           <Footer />\n//         </div>\n//     )\n// };\n\n// export default App;\n\n// class App extends React.Component { \n//   constructor() { \n//       super() \n//       this.state = { \n//           count: 0 \n//       } \n//       this.handleClick = this.handleClick.bind(this)\n//   }\n//   handleClick() {\n//     this.setState(prevState => {\n//       return {\n//         count: prevState.count + 1\n//       }\n//     })\n//   }\n//   render() { \n//       return ( \n//           <div> \n//               <h1>{this.state.count}</h1> \n//               <button onClick={this.handleClick}>Change!</button> \n//           </div> \n//       ) \n//   } \n// } \n\n// class App extends React.Component { \n//   constructor() { \n//       super() \n//       this.state = {\n//         loading: false,\n//         character: {}\n//       } \n//   } \n\n//   componentDidMount() {\n//     this.setState({loading: true})\n//     fetch(\"https://swapi.dev/api/films/1/\") \n//     .then(response => response.json()) \n//     .then(data => {\n//       this.setState({\n//         loading: false,\n//         character: data\n//       })\n//     }) \n//   }\n\n//   render() { \n//       const text = this.state.loading ? \"Идет загрузка, подождите..\" : `${this.state.character.title} ${this.state.character.characters}`\n//       return ( \n//           <div> \n//               <span>{text}</span>\n//           </div> \n//       ) \n//   } \n// }\n\n// class App extends React.Component { \n//   constructor() { \n//       super() \n//       this.state = {\n//         firstName: \"\",\n//         lastName: \"\",\n//         textArea: \"Some text\",\n//         isFriendly: false,\n//         gender: \"\",\n//         favColor: \"\"\n//       }\n//       this.handleChange = this.handleChange.bind(this) \n//   }\n\n//   handleChange(event) {\n//     const {name, value, type, checked} = event.target\n//     type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n//   }\n\n//   render() { \n//       const out = this.state.isFriendly ? <h2>{this.state.textArea}</h2> : \"\";\n//       const genderCh = this.state.gender ? <h2>You are a {this.state.gender}</h2> : \"\";\n//       const favColor = this.state.favColor ? <h2>Your favorite color is a {this.state.favColor}</h2> : \"\";\n//       return ( \n//           <form>\n//             <input type=\"text\" value={this.state.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={this.handleChange} />\n//             <input type=\"text\" value={this.state.lastName} name=\"lastName\" placeholder=\"Last Name\" onChange={this.handleChange} />\n//             <br />\n//             <textarea name=\"textArea\" value={this.state.textArea} onChange={this.handleChange} />\n//             <br />\n//             <label>\n//               <input type=\"checkbox\" name=\"isFriendly\" checked={this.state.isFriendly} onChange={this.handleChange} /> textbox?\n//             </label>\n//             <br />\n//             <label>\n//               <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.gender == \"male\"} onChange={this.handleChange} /> Male\n//             </label>\n//             <br />\n//             <label>\n//               <input type=\"radio\" name=\"gender\" value=\"female\" checked={this.state.gender == \"female\"} onChange={this.handleChange} /> Female\n//             </label>\n//             <h1>{this.state.firstName} {this.state.lastName}</h1><br />\n//             {genderCh}\n//             {out}\n//             <label>Favorite color:</label>\n//             <select value={this.state.favColor} onChange={this.handleChange} name=\"favColor\">\n//               <option value=\"Blue\">Blue</option>\n//               <option value=\"Green\">Green</option>\n//               <option value=\"Red\">Red</option>\n//               <option value=\"Orange\">Orange</option>\n//               <option value=\"Yellow\">Yellow</option>\n//             </select>\n//             {favColor}\n//           </form>\n//       ) \n//   } \n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","MainContent","Footer","Form","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/GitHub/react_lesson/src/components/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport MainContent from \"../MainContent\";\r\nimport Footer from \"../Footer\";\r\nimport Form from \"./Form\";\r\n\r\n// function App() {\r\n//     return (\r\n//         <div>\r\n//           <Header />\r\n//           <MainContent />\r\n//           <Footer />\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// export default App;\r\n\r\n// class App extends React.Component { \r\n//   constructor() { \r\n//       super() \r\n//       this.state = { \r\n//           count: 0 \r\n//       } \r\n//       this.handleClick = this.handleClick.bind(this)\r\n//   }\r\n//   handleClick() {\r\n//     this.setState(prevState => {\r\n//       return {\r\n//         count: prevState.count + 1\r\n//       }\r\n//     })\r\n//   }\r\n//   render() { \r\n//       return ( \r\n//           <div> \r\n//               <h1>{this.state.count}</h1> \r\n//               <button onClick={this.handleClick}>Change!</button> \r\n//           </div> \r\n//       ) \r\n//   } \r\n// } \r\n\r\n// class App extends React.Component { \r\n//   constructor() { \r\n//       super() \r\n//       this.state = {\r\n//         loading: false,\r\n//         character: {}\r\n//       } \r\n//   } \r\n\r\n//   componentDidMount() {\r\n//     this.setState({loading: true})\r\n//     fetch(\"https://swapi.dev/api/films/1/\") \r\n//     .then(response => response.json()) \r\n//     .then(data => {\r\n//       this.setState({\r\n//         loading: false,\r\n//         character: data\r\n//       })\r\n//     }) \r\n//   }\r\n\r\n//   render() { \r\n//       const text = this.state.loading ? \"Идет загрузка, подождите..\" : `${this.state.character.title} ${this.state.character.characters}`\r\n//       return ( \r\n//           <div> \r\n//               <span>{text}</span>\r\n//           </div> \r\n//       ) \r\n//   } \r\n// }\r\n\r\n// class App extends React.Component { \r\n//   constructor() { \r\n//       super() \r\n//       this.state = {\r\n//         firstName: \"\",\r\n//         lastName: \"\",\r\n//         textArea: \"Some text\",\r\n//         isFriendly: false,\r\n//         gender: \"\",\r\n//         favColor: \"\"\r\n//       }\r\n//       this.handleChange = this.handleChange.bind(this) \r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     const {name, value, type, checked} = event.target\r\n//     type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n//   }\r\n\r\n//   render() { \r\n//       const out = this.state.isFriendly ? <h2>{this.state.textArea}</h2> : \"\";\r\n//       const genderCh = this.state.gender ? <h2>You are a {this.state.gender}</h2> : \"\";\r\n//       const favColor = this.state.favColor ? <h2>Your favorite color is a {this.state.favColor}</h2> : \"\";\r\n//       return ( \r\n//           <form>\r\n//             <input type=\"text\" value={this.state.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={this.handleChange} />\r\n//             <input type=\"text\" value={this.state.lastName} name=\"lastName\" placeholder=\"Last Name\" onChange={this.handleChange} />\r\n//             <br />\r\n//             <textarea name=\"textArea\" value={this.state.textArea} onChange={this.handleChange} />\r\n//             <br />\r\n//             <label>\r\n//               <input type=\"checkbox\" name=\"isFriendly\" checked={this.state.isFriendly} onChange={this.handleChange} /> textbox?\r\n//             </label>\r\n//             <br />\r\n//             <label>\r\n//               <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.gender == \"male\"} onChange={this.handleChange} /> Male\r\n//             </label>\r\n//             <br />\r\n//             <label>\r\n//               <input type=\"radio\" name=\"gender\" value=\"female\" checked={this.state.gender == \"female\"} onChange={this.handleChange} /> Female\r\n//             </label>\r\n//             <h1>{this.state.firstName} {this.state.lastName}</h1><br />\r\n//             {genderCh}\r\n//             {out}\r\n//             <label>Favorite color:</label>\r\n//             <select value={this.state.favColor} onChange={this.handleChange} name=\"favColor\">\r\n//               <option value=\"Blue\">Blue</option>\r\n//               <option value=\"Green\">Green</option>\r\n//               <option value=\"Red\">Red</option>\r\n//               <option value=\"Orange\">Orange</option>\r\n//               <option value=\"Yellow\">Yellow</option>\r\n//             </select>\r\n//             {favColor}\r\n//           </form>\r\n//       ) \r\n//   } \r\n// }\r\n\r\nfunction App() {\r\n  return(\r\n    <Form />\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,QAAQ;;AAEzb,oBACED,OAAA,CAACF,IAAI;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEZ;AAACC,EAAA,GAJQL,GAAG;AAMZ,eAAeA,GAAG;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}